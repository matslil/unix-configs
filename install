#!/bin/bash -x

set -eEuo pipefail

reporoot=$(readlink -f "$(dirname "$0")")
readonly reporoot=${reporoot}

create_file () {
    local -r src_file="$1"
    local -r dst_file="$2"

    if [[ -d "$src_file" ]]; then
        [[ -d "$dst_file" ]] || mkdir "$dst_file"
    else
        ln -s "$src_file" "$dst_file"
    fi

}

check_create_file() {
    local -r src_file="$1"
    local -r dst_file="${HOME}/${1#"${reporoot}"/files/}"

    if [[ ( -d "$dst_file" && -d "$src_file" ) || $src_file == "$(readlink "$dst_file")" ]]; then
        # File updated, nothing to do
        return 0
    fi

    if [[ -e "$dst_file" ]]; then
        printf '%s: File already exists, will not be touched.\n' "$dst_file"
        return 1
    fi

    create_file "$src_file" "$dst_file"
}

check_failed=0

while IFS= read -r -d '' file; do
    if ! check_create_file "$file"; then
        check_failed=1
    fi
done < <(find "${reporoot}/files" -mindepth 1 -print0)

if (( check_failed )); then
    printf 'Some file were not updated, remove them and re-run script if you want them updated too\n'
else
    printf 'All files linked\n'
fi
######################################################################
# vim: set tabstop=4 expandtab shiftwidth=4
